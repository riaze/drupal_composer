<?php

use \Drupal\user\UserInterface;
use Drupal\Console\Bootstrap\Drupal;
use Drupal\Core\Form\FormStateInterface;

function hello_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
    switch ($route_name) {
  
      // Main module help for the block module.
      case 'help.page.hello':
        return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href=":blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', array(
          ':blocks' => \Drupal::url('block.admin_display'),
        )) . '</p>';
  
      // Help for another path in the block module.
      case 'block.admin_display':
        return '<p>' . t('This page provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions. Since not all themes implement the same regions, or display regions in the same way, blocks are positioned on a per-theme basis. Remember that your changes will not be saved until you click the <em>Save blocks</em> button at the bottom of the page.') . '</p>';
    }
  }
    //
  function hello_cron() {

    // Short-running operation example, not using a queue:
    // Delete all expired records since the last cron run.
    \Drupal::messenger()->addMessage('hello cron form riaze');
    $purge_days_number = \Drupal::config('hello.setting')->get('purge_days_number');
    if($purge_days_number != '0'){
      \Drupal::database()->delete('hello_user_statistics')->condition('time', REQUEST_TIME-$purge_days_number * (24*3600), '<')
      ->execute();
    }
    
  }

  // section hook_user

  function hello_user_login($account) {
    
   \Drupal::messenger()->addMessage(t('hello cron form %name!', ['%name' => $account->getAccountName()]));
   \Drupal::database()->insert('hello_user_statistics')->fields(
     [
       'uid' =>$account->id(),
       'action' => 1,
       'time' => REQUEST_TIME,
     ])->execute();
  }

  function hello_user_logout(\Drupal\Core\Session\AccountProxyInterface $account) {
    
    \Drupal::database()->insert('hello_user_statistics')->fields(
      [
        'uid' =>$account->id(),
        'action' => 0,
        'time' => REQUEST_TIME,
      ])->execute();
   }

  function hello_user_delete(\Drupal\user\UserInterface $user) {

    \Drupal::database()->delete('hello_user_statistics')->condition('uid',  $user->id())->execute();

  }

  function hello_theme($existing, $type, $theme, $path){
    return array(
      'hello_module' => array(
        'template' => 'hello-module',
        'variables' => array('data' => null),
      ),
    );
  }

  function hello_form_user_admin_settings_alter(array &$form, FormStateInterface $form_state){
    
    $roles = \Drupal::entityTypeManager()->getStorage('user_role')->loadMultiple();
    unset($roles['anonymous']);
    $options = [];
    foreach($roles as $role){
      $options[$role->id()] = $role->label();
    }
    $form['user_statistics'] = [
      '#type' => 'details',
      '#title' => t('Choose roles to track'),
      '#options' => TRUE,
      '#weight' => -1,
    ];

    $form['user_statistics']['options'] = [
      '#type' => 'checkboxes',
      '#options' => $options,
      '#default_value' => \Drupal::config('hello.settings')->get('user_statistics_roles'),
    ];

    $form['#submit'][] = 'hello_user_admin_settings_form_submit';
  }

  function  hello_user_admin_settings_form_submit(array &$form, FormStateInterface $form_state){
    
    $options = $form_state->getValue('options');
    \Drupal::configFactory()->getEditable('hello.settings')->set('user_statistics_roles', $options)->save();
  }
  